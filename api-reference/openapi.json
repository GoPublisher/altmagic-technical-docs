{
  "openapi": "3.0.0",
  "info": {
    "title": "Alt Magic API",
    "description": "Generate AI-powered alt text for images with automatic fallback",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.altmagic.pro",
      "description": "Production API server"
    }
  ],
  "paths": {
    "/v1/generate-alt-text-api": {
      "post": {
        "summary": "Generate Alt Text",
        "description": "Generate descriptive alt text for images using AI with automatic fallback from Gemini to OpenAI",
        "operationId": "generateAltText",
        "tags": [
          "Endpoints"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "image_url",
                  "user_id"
                ],
                "properties": {
                  "image_url": {
                    "type": "string",
                    "description": "Publicly accessible URL of the image to generate alt text for",
                    "format": "uri"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "Unique identifier (email) for the user requesting the alt text",
                    "format": "email"
                  },
                  "blog_title": {
                    "type": "string",
                    "description": "Blog or article title to provide additional context"
                  },
                  "seo_keywords": {
                    "type": "string",
                    "description": "Comma-separated keywords for SEO optimization"
                  },
                  "language_code": {
                    "type": "string",
                    "description": "Language code (e.g., 'en', 'fr', 'es') for generated alt text. If not provided, defaults to English ('en'). See [Language Support](/api-reference/language-support) page for complete list of supported languages."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful alt text generation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "altText": {
                      "type": "string",
                      "description": "The generated alt text"
                    },
                    "CreditsAvailable": {
                      "type": "integer",
                      "description": "Remaining credits for the user after this request"
                    },
                    "plan_type": {
                      "type": "string",
                      "description": "The user's subscription plan"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters"
          },
          "401": {
            "description": "Unauthorized - invalid or missing API key"
          },
          "403": {
            "description": "Forbidden - no credits remaining"
          },
          "404": {
            "description": "User not found"
          },
          "429": {
            "description": "Too many requests - rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/v1/get-user-details-api": {
      "post": {
        "summary": "Get User Details",
        "description": "Retrieves user details including their current subscription plan and available credits",
        "operationId": "getUserDetails",
        "tags": [
          "Endpoints"
        ],
        "security": [
          {
            "apiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "description": "Unique identifier of the user whose details are requested. If omitted, the user_id will be inferred from the API key.",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful user details retrieval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userDetails": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string",
                          "description": "The unique identifier of the user"
                        },
                        "plan_type": {
                          "type": "string",
                          "description": "The subscription plan of the user"
                        },
                        "credits_available": {
                          "type": "integer",
                          "description": "The number of credits currently available"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing user_id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User ID is required."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - missing API key",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - invalid API key or user ID mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Authentication failed: Invalid API key"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Too many requests - rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Too many requests from this User, please try again later."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Internal server error"
                    },
                    "error": {
                      "type": "string",
                      "example": "Detailed error message here"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  }
}